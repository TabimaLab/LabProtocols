---
title: "Lab_6"
author: "jasper perseus carleton"
date: '2023-03-15'
output: html_document
---

1. kmer - a section of DNA fragments with a length defined by the user
2. N50 - the number of bp that half the scaffolds of an assembled genome is lower than and half is higher than. L90 - Number of scaffolds that contain 90% of the genome
3. The best kmer value is 
4. The best kmer value per unicycler is 47
5. The unicycler assembly was better than all of our SPADES assemblies


| Dataset         | Assembly Software | K-value | Number of Reads | Number of Scaffolds | %GC    | N50       | L90   | Average Coverage |
|-----------------|-------------------|---------|-----------------|---------------------|--------|-----------|-------|------------------|
| Raw/Clean Reads | Spades            | 7       | N/A             | N/A                 | N/A    | N/A       | N/A   | N/A              |
| Raw/Clean Reads | Spades            | 21      | 27040           | 27040               | 56.74% | 2.559 KB  | 15489 |                  |
| Raw/Clean Reads | Spades            | 47      | 25936           | 25936               | 56.85% | 12.135 KB | 14925 |                  |
| Unicycler       | UC                | 47      | 1212            | 1212                | 61.27% | 91.021 KB | 241   |                  |


```
bwa index best_assembly.fasta
bwa mem -t 4 best_assembly.fasta S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz > bwa.sam

| samtools view -S -b | samtools sort -O bam -o mapped.bam
samtools index mapped.bam
``


```
sbatch -J blast_S07 --wrap="blastn -num_threads 4 -task megablast -query assembly.fasta -db /Smaug_SSD/bin/ncbi-blast-2.11.0+/blastdb/nt -outfmt '6 qseqid staxids bitscore std' -max_target_seqs 1 -max_hsps 1  -evalue 1e-25 -out best_assembly.fasta" -o blast_S06

```




```
sbatch -J K7_jcarleton --wrap "/Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades.py -t 3 -k 7 -1 S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz -2 S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz -o spades_7";

sbatch -J K21_jcarleton --wrap "/Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades.py -t 3 -k 21 -1 S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz -2 S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz -o spades_21";

sbatch -J K47_jcarleton --wrap "/Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades.py -t 3 -k 47 -1 S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz -2 S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz -o spades_47";

```

 
```
stats.sh in=spades_7/scaffolds.fasta
stats.sh in=spades_21/scaffolds.fasta
stats.sh in=spades_47/scaffolds.fasta
```

```
Smaug_SSD/bin/bbmap/stats.sh
```

```
for i in 7 21 47:
do python3 "/Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades.py -t 3 -k $i -1 paired_ends_R1.fastq.gz -2 paired_ends_R2.fastq.gz -o spades_$i";
done
``` 
^ this is serial processing



parallel processing runs all processes at same time, serial is one after the other

