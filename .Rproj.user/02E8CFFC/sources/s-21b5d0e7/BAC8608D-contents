Command line: /Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades.py	-t	3	-k	7	-1	/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz	-2	/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz	-o	/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7	

System information:
  SPAdes version: 3.13.0
  Python version: 3.8.10
  OS: Linux-5.15.0-67-generic-x86_64-with-glibc2.29

Output dir: /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7
Mode: read error correction and assembling
Debug mode is turned OFF

Dataset parameters:
  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)
  Reads:
    Library number: 1, library type: paired-end
      orientation: fr
      left reads: ['/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz']
      right reads: ['/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz']
      interlaced reads: not specified
      single reads: not specified
      merged reads: not specified
Read error correction parameters:
  Iterations: 1
  PHRED offset will be auto-detected
  Corrected reads will be compressed
Assembly parameters:
  k: [7]
  Repeat resolution is enabled
  Mismatch careful mode is turned OFF
  MismatchCorrector will be SKIPPED
  Coverage cutoff is turned OFF
Other parameters:
  Dir for temp files: /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/tmp
  Threads: 3
  Memory limit (in Gb): 125


======= SPAdes pipeline started. Log can be found here: /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/spades.log


===== Read error correction started. 


== Running read error correction tool: /Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades-hammer /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/corrected/configs/config.info

  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from refs/heads/spades_3.13.0, git revision 8ea46659e9b2aca35444a808db550ac333006f8b
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/corrected/configs/config.info
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 3
  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 125 Gb
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33
  0:00:00.001     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]
  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes
     === ITERATION 0 begins ===
  0:00:00.001     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index
  0:00:00.001     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 48 files using 3 threads. This might take a while.
  0:00:00.001     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096
  0:00:00.001     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 13.8885 Gb
  0:00:00.001     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1398101
  0:00:00.001     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz
  0:00:40.799     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 500168 reads
  0:01:20.085     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 985615 reads
  0:01:59.234     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1483727 reads
  0:02:29.977     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1994903 reads
  0:02:59.525     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2500096 reads
  0:03:30.153     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2997412 reads
  0:04:02.553     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 3488793 reads
  0:05:07.189     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 4489710 reads
  0:06:15.460     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz
  0:09:57.657     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 8612070 reads
  0:12:50.621     1G / 1G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 11180066 reads processed
  0:12:50.849    12M / 1G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.
  0:13:29.901    12M / 1G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 129130816 kmers in total.
  0:13:29.901    12M / 1G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.
  0:13:31.891    12M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices
  0:14:27.546    68M / 1G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.
  0:14:35.893    68M / 1G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 59894090 bytes occupied (3.7106 bits per kmer).
  0:14:35.893    68M / 1G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order
  0:15:17.628     1G / 1G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.
  1:01:04.428     1G / 1G    INFO    General                 (main.cpp                  : 155)   Extracting clusters
  1:03:38.186     1G / 5G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 75896698
  1:03:38.396     1G / 5G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.
  1:03:41.434     3G / 5G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz
  1:41:53.006     3G / 5G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz
  2:22:22.665     3G / 5G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.
  2:22:24.502     3G / 5G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 129130816 kmers in total. Among them 69059800 (53.4805%) are singletons.
  2:22:24.503     3G / 5G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 853 non-read kmers were generated.
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 60467454. Among them 39532462 (65.3781%) are good
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 757231. Among them 756470 (99.8995%) are good
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 15829628. Among them 11043997 (69.7679%) are good
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 4.33776 kmers
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.07503
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 51332929
  2:34:52.249     3G / 5G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.908526,0.0626939,0.00908562,0.0196945),(0.0204573,0.963463,0.0107265,0.00535283),(0.00519671,0.0104144,0.963394,0.020995),(0.019356,0.00883939,0.0619151,0.909889))
  2:34:52.349     3G / 5G    INFO    General                 (main.cpp                  : 178)   Finished clustering.
  2:34:52.349     3G / 5G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 3 threads.
  3:01:25.932     3G / 5G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 775601 new k-mers.
  3:39:49.935     3G / 5G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 1 produced 20023 new k-mers.
  4:05:08.387     3G / 5G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 2 produced 431 new k-mers.
  4:29:14.657     3G / 5G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 3 produced 20 new k-mers.
  4:51:55.768     3G / 5G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 4 produced 0 new k-mers.
  4:51:55.769     3G / 5G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized
  4:51:55.769     3G / 5G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 3 threads.
  4:51:55.769     3G / 5G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_1.fq.gz and /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/S06_CKDN230002813-1A_HT2J2DSX5_L2_2.fq.gz
  4:52:01.806     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 300000 reads.
  4:52:50.856     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0
  4:52:53.496     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0
  4:52:58.460     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 1 of 300000 reads.
  4:53:40.720     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 1
  4:53:43.277     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 1
  4:53:48.051     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 2 of 300000 reads.
  4:54:25.916     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 2
  4:54:27.483     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 2
  4:54:32.177     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 3 of 300000 reads.
  4:55:11.958     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 3
  4:55:13.641     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 3
  4:55:17.782     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 4 of 300000 reads.
  4:55:55.313     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 4
  4:55:57.253     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 4
  4:56:02.613     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 5 of 300000 reads.
  4:56:41.801     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 5
  4:56:43.603     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 5
  4:56:48.566     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 6 of 300000 reads.
  4:57:25.292     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 6
  4:57:26.841     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 6
  4:57:30.603     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 7 of 300000 reads.
  4:58:05.783     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 7
  4:58:07.807     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 7
  4:58:12.340     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 8 of 300000 reads.
  4:58:48.621     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 8
  4:58:50.602     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 8
  4:58:54.299     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 9 of 300000 reads.
  4:59:26.970     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 9
  4:59:28.502     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 9
  4:59:32.470     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 10 of 300000 reads.
  5:00:09.140     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 10
  5:00:10.881     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 10
  5:00:15.155     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 11 of 300000 reads.
  5:00:47.616     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 11
  5:00:49.594     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 11
  5:00:53.682     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 12 of 300000 reads.
  5:01:24.618     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 12
  5:01:25.962     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 12
  5:01:30.473     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 13 of 300000 reads.
  5:02:06.572     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 13
  5:02:08.551     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 13
  5:02:13.472     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 14 of 300000 reads.
  5:02:50.994     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 14
  5:02:52.386     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 14
  5:02:56.302     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 15 of 300000 reads.
  5:03:27.143     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 15
  5:03:28.615     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 15
  5:03:32.318     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 16 of 300000 reads.
  5:04:03.134     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 16
  5:04:04.866     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 16
  5:04:09.243     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 17 of 300000 reads.
  5:04:45.322     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 17
  5:04:46.900     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 17
  5:04:49.469     4G / 5G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 18 of 190033 reads.
  5:05:11.247     4G / 5G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 18
  5:05:12.293     4G / 5G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 18
  5:05:12.703     3G / 5G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 2719169 bases in 1258248 reads.
  5:05:12.704     3G / 5G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 5510 bases out of 1677008669.
  5:05:13.465    16M / 5G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/corrected/corrected.yaml
  5:05:13.466    16M / 5G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.

== Compressing corrected reads (with pigz)

== Dataset description file was created: /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/corrected/corrected.yaml


===== Read error correction finished. 


===== Assembling started.


== Running assembler: K7

  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/K7/configs/config.info
  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 125 Gb
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from refs/heads/spades_3.13.0, git revision 8ea46659e9b2aca35444a808db550ac333006f8b
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/dataset.info) with K=7
  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 3
  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started
  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction
  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0
  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached
  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction
  0:00:00.000     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)
  0:00:00.000     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads
  0:00:00.455    92M / 100M  INFO    General                 (binary_converter.hpp      :  93)   16384 reads processed
  0:00:00.822   108M / 108M  INFO    General                 (binary_converter.hpp      :  93)   32768 reads processed
  0:00:01.564   136M / 136M  INFO    General                 (binary_converter.hpp      :  93)   65536 reads processed
  0:00:02.839   200M / 200M  INFO    General                 (binary_converter.hpp      :  93)   131072 reads processed
  0:00:05.419   328M / 328M  INFO    General                 (binary_converter.hpp      :  93)   262144 reads processed
  0:00:10.171   576M / 576M  INFO    General                 (binary_converter.hpp      :  93)   524288 reads processed
  0:00:28.992   968M / 968M  INFO    General                 (binary_converter.hpp      :  93)   1048576 reads processed
  0:00:54.651   968M / 968M  INFO    General                 (binary_converter.hpp      :  93)   2097152 reads processed
  0:01:44.470   968M / 968M  INFO    General                 (binary_converter.hpp      :  93)   4194304 reads processed
  0:02:20.678   960M / 968M  INFO    General                 (binary_converter.hpp      : 117)   5581893 reads written
  0:02:21.985     4M / 968M  INFO    General                 (read_converter.hpp        :  87)   Converting single reads
  0:02:22.331   140M / 968M  INFO    General                 (binary_converter.hpp      : 117)   7983 reads written
  0:02:22.354     4M / 968M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads
  0:02:22.612   136M / 968M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written
  0:02:22.645     4M / 968M  INFO    General                 (construction.cpp          : 111)   Max read length 150
  0:02:22.645     4M / 968M  INFO    General                 (construction.cpp          : 117)   Average read length 150
  0:02:22.645     4M / 968M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting
  0:02:22.645     4M / 968M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 9 files using 3 threads. This might take a while.
  0:02:22.646     4M / 968M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096
  0:02:22.646     4M / 968M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 13.8885 Gb
  0:02:22.646     4M / 968M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 7456540
  0:02:37.203     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 2739977 reads
  0:02:52.341     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 5481148 reads
  0:03:08.441     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 8220811 reads
  0:03:25.563     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 10961268 reads
  0:03:44.759     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 13701915 reads
  0:04:02.932     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 16441542 reads
  0:04:19.693     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 19181475 reads
  0:04:38.938     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 21921599 reads
  0:04:41.877     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 289)   Processed 22343538 reads
  0:04:41.877     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K
  0:04:42.130    12M / 2G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 22343538 reads
  0:04:42.131    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.
  0:04:42.153    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 32896 kmers in total.
  0:04:42.153    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.
  0:04:42.154    12M / 2G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction
  0:04:42.155    12M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index
  0:04:42.155    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 48 files using 3 threads. This might take a while.
  0:04:42.155    12M / 2G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096
  0:04:42.155    12M / 2G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 13.8876 Gb
  0:04:42.155    12M / 2G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1398101
  0:04:42.183     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 380)   Processed 32896 kmers
  0:04:42.184     1G / 2G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 32896 kmers.
  0:04:42.185    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.
  0:04:42.212    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 8192 kmers in total.
  0:04:42.212    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.
  0:04:42.217    12M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices
  0:04:42.424    12M / 2G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.
  0:04:42.441    12M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 12832 bytes occupied (12.5312 bits per kmer).
  0:04:42.441    12M / 2G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers
  0:04:42.447    12M / 2G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.
  0:04:42.448    12M / 2G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph
  0:04:42.448    12M / 2G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths
  0:04:42.491    12M / 2G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 32896 sequences extracted
  0:04:42.528    12M / 2G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops
  0:04:42.535    12M / 2G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected
  0:04:42.613    12M / 2G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)
  0:04:42.613    12M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index
  0:04:42.613    12M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices
  0:04:42.929    16M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 16904 bytes occupied (4.11089 bits per kmer).
  0:04:42.929    16M / 2G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.
  0:06:55.901    16M / 2G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM
  0:06:55.917    16M / 2G    INFO    General                 (construction.cpp          : 464)   Processed 65536 edges
  0:06:55.937    24M / 2G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding
  0:06:56.006    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0
  0:06:56.008    24M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 3443
  0:06:56.009    24M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 4271. Coverage mad: 2425.53
  0:06:56.010    24M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model
  0:06:59.691    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2
  0:07:09.261    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4
  0:07:23.950    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8
  0:07:48.235    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 20616.5. Fitted coverage std. dev: 14493.9
  0:07:48.492    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 2.0218e-05
  0:07:48.493    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 1
  0:07:48.493    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 1
  0:07:48.493    32M / 2G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 23116
  0:07:48.494    24M / 2G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 20616.5
  0:07:48.495    24M / 2G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 1
  0:07:48.495    24M / 2G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0
  0:07:48.495    24M / 2G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer
  0:07:48.495    24M / 2G    INFO    General                 (graph_pack.hpp            : 101)   Index refill
  0:07:48.495    24M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index
  0:07:48.495    24M / 2G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 48 files using 3 threads. This might take a while.
  0:07:48.496    24M / 2G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 4096
  0:07:48.496    24M / 2G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 13.8863 Gb
  0:07:48.496    24M / 2G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1398101
  0:07:48.530     1G / 2G    INFO    General                 (edge_index_builders.hpp   :  77)   Processed 65536 edges
  0:07:48.531     1G / 2G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 65536 sequences.
  0:07:48.532    24M / 2G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.
  0:07:48.549    20M / 2G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 32896 kmers in total.
  0:07:48.549    20M / 2G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.
  0:07:48.553    20M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices
  0:07:50.053    20M / 2G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.
  0:07:50.055    20M / 2G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24184 bytes occupied (5.88132 bits per kmer).
  0:07:50.056    24M / 2G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.
  0:07:50.078    24M / 2G    INFO    General                 (edge_index.hpp            :  92)   Index refilled
  0:07:50.078    24M / 2G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps
  0:07:50.108    24M / 2G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)
  0:10:21.061    24M / 2G    INFO    General                 (gap_closer.cpp            : 138)   Used 5581893 paired reads
  0:10:21.061    24M / 2G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices
=== Stack Trace ===
[0x40ac28]
[0x430b0d]
[0x478935]
[0x429e5f]
[0x55d191]
[0x408c19]
[0x40123c]
[0x87b11b]
[0x407c01]
spades-core: /spades/assembler/src/projects/spades/gap_closer.cpp:393: debruijn_graph::GapCloser::GapCloser(debruijn_graph::Graph&, omnigraph::de::PairedInfoIndexT<debruijn_graph::DeBruijnGraph>&, size_t, double, size_t): Assertion `min_intersection_ < g_.k()' failed.


== Error ==  system call for: "['/Smaug_SSD/bin/SPAdes-3.13.0-Linux/bin/spades-core', '/Tabima_lab/homes/jcarleton/genome project/Lab_6/assembly/spades_7/K7/configs/config.info']" finished abnormally, err code: -6

In case you have troubles running SPAdes, you can write to spades.support@cab.spbu.ru
or report an issue on our GitHub repository github.com/ablab/spades
Please provide us with params.txt and spades.log files from the output directory.
